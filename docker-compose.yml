version: '3.8'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    ports:
      - 2181:2181
    networks:
      - app-network

  kafka:
    image: confluentinc/cp-kafka
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper
    healthcheck:
      test: nc -z kafka 9092 || exit 1
      interval: 5s
      retries: 10
      start_period: 10s
    networks:
      - app-network

  order-service:
    build: .
    ports:
      - "3000:3000"
    depends_on:
      kafka:
        condition: service_healthy
      orders-db:
        condition: service_started
    env_file:
      - .env
    networks:
      - app-network

  kafdrop:
    image: obsidiandynamics/kafdrop
    container_name: kafdrop
    ports:
      - 9000:9000
    environment:
      KAFKA_BROKER_CONNECT: kafka:9092
      JVM_OPTS: "-Xms32M -Xmx64M"
    depends_on:
      - kafka
    networks:
      - app-network

  orders-db:
    image: mongo:latest
    ports:
      - 27018:27017
    networks:
      - app-network

networks:
  app-network:
    driver: bridge
